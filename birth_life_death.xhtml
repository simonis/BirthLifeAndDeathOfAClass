<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

  <head>
    <meta charset="utf-8" />

    <title>Birth, Life and Death of a Class</title>

    <meta name="description" content="Describe how to detect and analyze different classes of HotSpot crashes." />
    <meta name="author" content="Volker H. Simonis" />

    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui" />

    <link rel="stylesheet" href="reveal.js/css/reveal.css" />
    <link rel="stylesheet" href="reveal.js/css/theme/joker2017.css" id="theme" />

    <!-- Code syntax highlighting -->
    <link rel="stylesheet" href="reveal.js/lib/css/monokai_sublime.css" />

  <style type="text/css">
.scrollable {
    bottom: 0px;
    overflow-y: auto  !important;
    overflow-x: hidden !important;
}

.reveal .slides > section.demo,
.reveal .slides > section > section.demo {
    padding: 0;
}

.reveal .big {
    font-size: .8em;
    line-height: 1.3em;
}

.reveal pre.console {
    background-color: black;
    color: #00ff00;
}

code.terminal .hljs-title {
    color: #00ff00;
}

.reveal pre.noshadow {
    border-radius: 0;
    box-shadow: unset;
}

.reveal pre code {
    max-height: 100%;
}
.bold {
    font-weight: bold;
}

.reveal .outline_white {
    color: white;
    text-shadow:
        -2px -2px 0 #000,
         2px -2px 0 #000,
        -2px  2px 0 #000,
         2px  2px 0 #000;
    min-height: 1.1em;
    text-align: center;
}
.reveal .outline_black {
    color: black;
    text-shadow:
        -2px -2px 0 #fff,
         2px -2px 0 #fff,
        -2px  2px 0 #fff,
         2px  2px 0 #fff;
    min-height: 1.1em;
    text-align: center;
}

.reveal .slide-number {
    position: fixed;
    display: block;
    left: 15px;
    bottom: 15px;
    opacity: 0.9;
    z-index: 31;
    font-size: 14px;
}
.reveal h1, .reveal h2, .reveal h3, .reveal h4, .reveal h5, .reveal h6 {
    text-transform: none;
}

.hljs-class .hljs-title {
    /* fix "public static class Y extends X {" such that 'Y' will be formatted the same like 'X' */
    color: #A6E22E;
    font-style: italic;
}

mark {
    color: black;
    background-color: yellow;
    border-radius: 10px;
}
mark.orange {
    color: black;
    background-color: orange;
    border-radius: 10px;
}
mark.border {
    color: inherit;
    background-color: inherit;
    border: 5px solid #1B91FF;
    /* Use a negative margin with the same size as the border to avoid size changes of elemnts with borders or when the border is set dynamically by fragments */
    margin: 0 -5px 0 -5px;
    border-radius: 10px;
}
mark.border-no-top {
    color: inherit;
    background-color: inherit;
    margin: 0 -5px 0 -5px;
    border-style: solid;
    border-color: #1B91FF;
    border-width: 0px 5px 5px 5px;
    border-radius: 0px 0px 10px 10px;
}
mark.border-no-bottom {
    color: inherit;
    background-color: inherit;
    margin: 0 -5px 0 -5px;
    border-style: solid;
    border-color: #1B91FF;
    border-width: 5px 5px 0px 5px;
    border-radius: 10px 10px 0px 0px;
}

.reveal .slides section .fragment.highlight-border, .reveal .slides section .fragment.highlight-current-border {
  opacity: 1;
  visibility: visible;
  /* Define a transparent border with the same size for inactive fragments such that we have no size changes when the fragments get displayed */
  border-width: 5px 5px 5px 5px;
  border-style: solid;
  border-color: transparent;
  /* Use a negative margin with the same size as the border to avoid size changes of elemnts with borders or when the border is set dynamically by fragments */
  margin: -5px;
}
.reveal .slides section .fragment.highlight-border.visible {
  border: 5px solid #1B91FF;
  border-radius: 10px;
  margin: 5px -5px 5px -5px;
}
.reveal .slides section .fragment.highlight-current-border.current-fragment {
  border: 5px solid #1B91FF;
  border-radius: 10px;
  margin: -5px;
}
.reveal .slides section .fragment.highlight-current-border.border-no-top.current-fragment {
  border-style: solid;
  border-color: transparent #1B91FF #1B91FF #1B91FF;
  border-width: 5px;
  border-radius: 0px 0px 10px 10px;
  margin: -5px;
}
.reveal .slides section .fragment.highlight-current-border.border-no-bottom.current-fragment {
  border-style: solid;
  border-color: #1B91FF #1B91FF transparent #1B91FF;
  border-width: 5px;
  border-radius: 10px 10px 0px 0px;
  margin: -5px;
}
.reveal .slides section .fragment.highlight-current-border.border-no-bottom-top.current-fragment {
  border-style: solid;
  border-color: transparent #1B91FF transparent #1B91FF;
  border-width: 5px;
  border-radius: 0px 0px 0px 0px;
  margin: -5px;
}


  table.calling_hirarchy {
/*    font-family: monospace, arial, helvetica, sans-serif; */
/*    background-color: #ffffff; */
    font-size: smaller;
    border-collapse: collapse;
    margin: 0px auto;
    padding: 2px;
    width: auto;
    overflow: auto;
    border: none;
  }

  table.calling_hirarchy tr {
    border: none;
  }

  table.calling_hirarchy td {
    padding: 4px;
/*    font-family: monospace; */
  }

  td.indent_level_0 {
    border-style: solid;
    border-width: 2px;
    background-color: #a0a0a0;
  }
  td.indent_level_1 {
    border-style: solid;
    border-width: 2px;
    background-color: #a8a8a8;
  }
  td.indent_level_2 {
    border-style: solid;
    border-width: 2px;
    background-color: #b0b0b0;
  }
  td.indent_level_3 {
    border-style: solid;
    border-width: 2px;
    background-color: #b8b8b8;
  }
  td.indent_level_4 {
    border-style: solid;
    border-width: 2px;
    background-color: #c0c0c0;
  }
  td.indent_level_5 {
    border-style: solid;
    border-width: 2px;
    background-color: #c8c8c8;
  }
  td.indent_level_6 {
    border-style: solid;
    border-width: 2px;
    background-color: #d0d0d0;
  }
  td.indent_level_7 {
    border-style: solid;
    border-width: 2px;
    background-color: #d8d8d8;
  }
  td.indent_level_8 {
    border-style: solid;
    border-width: 2px;
    background-color: #e0e0e0;
  }
  td.indent_level_9 {
    border-style: solid;
    border-width: 2px;
    background-color: #e8e8e8;
  }
  td.indent_level_10 {
    border-style: solid;
    border-width: 2px;
    background-color: #f0f0f0;
  }
  td.indent_level_11 {
    border-style: solid;
    border-width: 2px;
    background-color: #f8f8f8;
  }
  td.indent_level_12 {
    border-style: solid;
    border-width: 2px;
    background-color: #ffffff;
  }
  td.functionCall {
/*    font-weight: bold; */
    color: darkblue;
  }
  td.javaCall {
    font-weight: bold;
    color: darkgreen;
  }
  td.comment {
    font-style: italic;
    color: maroon;
  }
  td.highlight {
    border-style: solid;
    border-width: 2px;
    background-color: #a0ffa0;
  }
  table.calling_hirarchy td[rowspan] {
    border-style: none;
    border-width: 0;
    border-left: dotted;
    border-left-width: 2px;
  }

/* The Quiz (background) */
.reveal .slides section .quiz {
    display: none; /* Hidden by default */
}

.reveal .slides section .fragment.quiz {
    display: none; /* Hidden by default */
}

.reveal .slides section .fragment.quiz.current-fragment {
    display: block;
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    padding-top: 100px; /* Location of the box */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
}

/* Quiz Content */
.reveal .slides section .quiz-content {
    display: inline-block;
    position: relative;
    background-color: #fefefe;
    margin: auto;
    padding: 0;
    border: 1px solid #888;
    width: auto;
    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
    -webkit-animation-name: animatetop;
    -webkit-animation-duration: 0.4s;
    animation-name: animatetop;
    animation-duration: 0.4s
}

/* Add Animation */
@-webkit-keyframes animatetop {
    from {top:-300px; opacity:0}
    to {top:0; opacity:1}
}

@keyframes animatetop {
    from {top:-300px; opacity:0}
    to {top:0; opacity:1}
}

.reveal .slides section .quiz-header {
    padding: 12px 12px;
    background-color: #7571ff;
/*  background-color: #5cb85c; */
    color: white;
}

.reveal .slides section .quiz-header h2 {
    margin: 0;
}

.reveal .slides section .quiz-body {
    padding: 12px 16px;
    color: #3f3f3f;
}

.reveal .slides section .quiz-body li:not(:last-child) {
    margin-bottom: 15px;
}

.reveal .slides section .quiz-footer {
    padding: 12px 16px;
    background-color: #7571ff;
/*  background-color: #5cb85c; */
    color: white;
}
  </style>

    <!-- Printing and PDF exports -->
    <script>
      var link = document.createElement( 'link' );
      link.rel = 'stylesheet';
      link.type = 'text/css';
      link.href = window.location.search.match( /print-pdf/gi ) ? 'reveal.js/css/print/pdf.css' : 'reveal.js/css/print/paper.css';
      document.getElementsByTagName( 'head' )[0].appendChild( link );
    </script>

    <!--[if lt IE 9]>
    <script src="reveal.js/lib/js/html5shiv.js"></script>
    <![endif]-->

    <!--
      Issue #1105: Keyboard shortcut to skip forward/back over fragments #1173
      https://github.com/hakimel/reveal.js/pull/1173
    -->
  </head>

<!--
;; indent block of text
;; C-u <number> C-x <TAB>



;; select this code and do 'M-x eval-region'
(defun make-fragment (p1 p2)
  "Wraps the selection into 'fragment' <span>s and quotes '&', '<' and '>'."
  (interactive "r")
  (setq inputStr (buffer-substring-no-properties p1 p2))
  (setq inputStr (replace-regexp-in-string "&" "&amp;" inputStr))
  (setq inputStr (replace-regexp-in-string "<" "&lt;" inputStr))
  (setq inputStr (replace-regexp-in-string ">" "&gt;" inputStr))
  (setq resultStr (concat "<span class=\"fragment\">" (concat inputStr "</span>")))
  (delete-region p1 p2)
  (insert resultStr)
)
(defun make-fragment-simple (p1 p2)
  "Wraps the selection into 'fragment' <span>s without any quoting."
  (interactive "r")
  (setq inputStr (buffer-substring-no-properties p1 p2))
  (setq resultStr (concat "<span class=\"fragment\">" (concat inputStr "</span>")))
  (delete-region p1 p2)
  (insert resultStr)
)
(defun quote-fragment (p1 p2)
  "Quotes '&', '<' and '>'."
  (interactive "r")
  (setq inputStr (buffer-substring-no-properties p1 p2))
  (setq inputStr (replace-regexp-in-string "&" "&amp;" inputStr))
  (setq inputStr (replace-regexp-in-string "<" "&lt;" inputStr))
  (setq inputStr (replace-regexp-in-string ">" "&gt;" inputStr))
  (delete-region p1 p2)
  (insert inputStr)
)

(global-set-key (kbd "C-f") 'make-fragment)
(global-set-key (kbd "C-S-f") 'make-fragment-simple)
(global-set-key (kbd "C-S-q") 'quote-fragment)
;; revert key-binding
;; (global-set-key (kbd "C-f") 'forward-char)
;;
;; use 'C-h k <keystroke>' to find out what <keystroke> ia currently bound to

;; (vhs) The following is required to make 'C-c C-t' insert <code> tags without
;; newlines. 'sgml-tag-alist' is the "file-local" version of 'html-tag-alist'
(add-to-list 'html-tag-alist '("code"))
(add-to-list 'sgml-tag-alist '("code"))

-->

  <body>

    <div class="reveal">

      <!-- Any section element inside of this container is displayed as a slide -->
      <div class="slides">

        <section>
          <h1>Birth, Life and Death of a Class<br/></h1>
          <p>
            <small>Volker Simonis [Фолкер Симонис], SAP / <a href="mailto:volker.simonis@gmail.com">volker.simonis@gmail.com</a></small>
          </p>
        </section>

<!--
-->

        <section>

          <h3 style="text-transform: none;"><a href="https://github.com/simonis/BirthLifeAndDeathOfAClass">https://github.com/simonis/BirthLifeAndDeathOfAClass</a></h3>

          <h3 style="text-transform: none;"><a href="https://simonis.github.io/BirthLifeAndDeathOfAClass">https://simonis.github.io/BirthLifeAndDeathOfAClass</a></h3>

        </section>

        <section class="demo">

          <section>

            <h2>The class File Format</h2>

            <ul>
              <li>Code to be executed by the Java Virtual Machine</li>
              <li>Binary format (big-endian)</li>
              <li>Hardware- and operating system-independent</li>
              <li><a href="https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html">Chapter 4</a>
                of the <a href="https://docs.oracle.com/javase/specs/jvms/se8/html/index.html">Java Virtual Machine Specification</a></li>
            </ul>
          </section>


          <section>

            <h2>The class File Format</h2>

            <pre class="big noshadow" style="margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="">
ClassFile {
    u4             <span class="                 fragment highlight-current-border" data-fragment-index="1">magic;</span>                                 <span class="fragment" data-fragment-index="1">// 0xCAFEBABE</span>
    u2             minor_version;
    u2             <span class="                 fragment highlight-current-border" data-fragment-index="2">major_version;</span>                         <span class="fragment" data-fragment-index="2">// >= 45</span>
    u2             <span class="border-no-bottom fragment highlight-current-border" data-fragment-index="3">constant_pool_count;                 </span>
    cp_info        <span class="border-no-top    fragment highlight-current-border" data-fragment-index="3">constant_pool[constant_pool_count-1];</span>
    u2             access_flags;
    u2             <span class="border-no-bottom fragment highlight-current-border" data-fragment-index="4">this_class; </span>                           <span class="fragment" data-fragment-index="4">// pointers into</span>
    u2             <span class="border-no-top    fragment highlight-current-border" data-fragment-index="4">super_class;</span>                           <span class="fragment" data-fragment-index="4">// the constant_pool</span>
    u2             <span class="border-no-bottom fragment highlight-current-border" data-fragment-index="5">interfaces_count;            </span>
    u2             <span class="border-no-top    fragment highlight-current-border" data-fragment-index="5">interfaces[interfaces_count];</span>
    u2             <span class="border-no-bottom fragment highlight-current-border" data-fragment-index="6">fields_count;        </span>
    field_info     <span class="border-no-top    fragment highlight-current-border" data-fragment-index="6">fields[fields_count];</span>
    u2             <span class="border-no-bottom fragment highlight-current-border" data-fragment-index="7">methods_count;         </span>                <span class="fragment" data-fragment-index="7">// Here's the</span>
    method_info    <span class="border-no-top    fragment highlight-current-border" data-fragment-index="7">methods[methods_count];</span>                <span class="fragment" data-fragment-index="7">// real bytecode!</span>
    u2             <span class="border-no-bottom fragment highlight-current-border" data-fragment-index="8">attributes_count;            </span>          <span class="fragment" data-fragment-index="8">// predefined and</span>
    attribute_info <span class="border-no-top    fragment highlight-current-border" data-fragment-index="8">attributes[attributes_count];</span>          <span class="fragment" data-fragment-index="8">// custom attributes</span>
}
              </code>
            </pre>
<!--

OpenJDK 9 uses some custom, non-standardized attributes for module hashing
to prevent that "fake modules" can use classes which have been qualifiedly exported to a specific module.

-->

          </section>

          <section>
            <h2><code style="text-transform: none;">HelloWorld.java</code></h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
package simonis;

public class HelloWorld {
  public static void main(String[] args) {
    System.out.println("Hello world!");
  }
}
              </code>
            </pre>
            <br/>
            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ <span class="fragment">javac simonis/HelloWorld.java
$ </span><span class="fragment">javap -c -v simonis.HelloWorld          
...</span>
              </code>
            </pre>

          </section>

          <section>
            <h2><code style="text-transform: none;">HelloWorld.class</code></h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
public class simonis.HelloWorld
  minor version: 0
  major version: 53
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  <span class="fragment highlight-border" data-fragment-index="1">this_class</span>: <span class="fragment highlight-border" data-fragment-index="2" arrow-to="target1">#1</span>                          // simonis/HelloWorld
  super_class: #3                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 2, attributes: 1
Constant pool:
   <span id="target1" class="fragment highlight-border" data-fragment-index="2">#1</span> = Class              <span class="fragment highlight-border" data-fragment-index="3" arrow-to="target2">#2</span>             // simonis/HelloWorld
   <span id="target2" class="fragment highlight-border" data-fragment-index="3">#2</span> = Utf8               simonis/HelloWorld
   #3 = Class              #4             // java/lang/Object
   #4 = Utf8               java/lang/Object
   ...
              </code>
            </pre>

          </section>

          <section class="demo">

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
<span/>  <span class="fragment highlight-current-border" data-fragment-index="2" id="a1">#24</span> = Methodref          <span class="fragment highlight-current-border" data-fragment-index="3" arrow-to="a2">#25</span>.<span class="fragment highlight-current-border" data-fragment-index="3" arrow-to="a3">#27</span>  // java/io/PrintStream.println:(Ljava/lang/String;)V
  <span class="fragment highlight-current-border" data-fragment-index="3" id="a2">#25</span> = Class              <span class="fragment highlight-current-border" data-fragment-index="4" arrow-to="a4">#26</span>      // java/io/PrintStream
  <span class="fragment highlight-current-border" data-fragment-index="4" id="a4">#26</span> = Utf8               java/io/PrintStream
  <span class="fragment highlight-current-border" data-fragment-index="3" id="a3">#27</span> = NameAndType        <span class="fragment highlight-current-border" data-fragment-index="4" arrow-to="a5">#28</span>:<span class="fragment highlight-current-border" data-fragment-index="4" arrow-to="a6">#29</span>  // println:(Ljava/lang/String;)V
  <span class="fragment highlight-current-border" data-fragment-index="4" id="a5">#28</span> = Utf8               println
  <span class="fragment highlight-current-border" data-fragment-index="4" id="a6">#29</span> = Utf8               (Ljava/lang/String;)V
  ...
  public static void main(java.lang.String[]);
    Code:
      stack=2, locals=1, args_size=1
         0: <span class="border-no-bottom     fragment highlight-current-border" data-fragment-index="1">getstatic    </span> #16       // Field java/lang/System.out:Ljava/io/PrintStream;
         3: <span class="border-no-bottom-top fragment highlight-current-border" data-fragment-index="1">ldc          </span> #22       // String Hello world!
         5: <span class="border-no-top        fragment highlight-current-border" data-fragment-index="1">invokevirtual</span> <span class="fragment highlight-current-border" data-fragment-index="2" arrow-to="a1">#24</span>       <span class="fragment highlight-current-border" data-fragment-index="4">// Method java/io/PrintStream.println:(Ljava/lang/String;)V</span>
         8: return
      <span class="border-no-bottom     fragment highlight-current-border" data-fragment-index="5">LineNumberTable:</span>
      <span class="border-no-bottom-top fragment highlight-current-border" data-fragment-index="5">  line 5: 0     </span>
      <span class="border-no-top        fragment highlight-current-border" data-fragment-index="5">  line 6: 8     </span>
      <span class="border-no-bottom     fragment highlight-current-border" data-fragment-index="6">LocalVariableTable:                              </span>
      <span class="border-no-bottom-top fragment highlight-current-border" data-fragment-index="6">  Start  Length  Slot  Name   Signature          </span>
      <span class="border-no-top        fragment highlight-current-border" data-fragment-index="6">      0       9     0  args   [Ljava/lang/String;</span>
              </code>
            </pre>

          </section>
        </section>



        <section class="demo">

          <section>

            <h2>Class types</h2>

            <ul>
              <li>Top-Level
              <li> Nested
                <ul>
                  <li>Static Nested (Nested)</li>
                  <li>Non-Static Nested (Inner)
                    <ul>
                      <li>Local</li>
                      <li>Anonymous</li>
                    </ul>
                  </li>
                </ul>
              </li>
              </li>
              <li>VM-Anonymous</li>
            </ul>
          </section>

          <section class="demo">

            <h2>Top-Level classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" text-trim="true" data-noescape="true" style="height:100%">
<![CDATA[
public class TopLevel {
  public static void main(String... args) {
    TopLevel tl = new TopLevel();
    printClassAttrs(tl.getClass());
  }
  public static void printClassAttrs(Class<?> anonymous) {
    System.out.println("Name:             " + anonymous.getName());
    System.out.println("Package name:     " + anonymous.getPackageName());
    System.out.println("Member:           " + anonymous.isMemberClass());
    System.out.println("Local:            " + anonymous.isLocalClass());
    System.out.println("Anonymous:        " + anonymous.isAnonymousClass());
    System.out.println("Synthetic:        " + anonymous.isSynthetic());
    System.out.println("Declaring class:  " + anonymous.getDeclaringClass());
    System.out.println("Enclosing class:  " + anonymous.getEnclosingClass());
    System.out.println("Enclosing method: " + anonymous.getEnclosingMethod());
  }
}
]]>
              </code>
            </pre>
          </section>

          <section class="demo">

            <h2>Top-Level classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ javac simonis/TopLevel.java
$ <span class="fragment">ll simonis/
-rw-rw-r-- 1 simonis simonis 1852 Okt 13 09:58 TopLevel.class
$ </span><span class="fragment">java simonis.TopLevel</span>
<span class="fragment">Name:             simonis.TopLevel
Package name:     simonis
Member:           false
Local:            false
Anonymous:        false
Synthetic:        false
Declaring class:  null
Enclosing class:  null
Enclosing method: null</span>
              </code>
            </pre>
          </section>

          <section>

            <h2>Nested classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class Nested {
  static class NestedClass {
    public NestedClass() {}
  }
  public static void main(String... args) {
    NestedClass nc = new NestedClass();
    TopLevel.printClassAttrs(nc.getClass());
  }
}
              </code>
            </pre>
          </section>

          <section class="demo">

            <h2>Nested classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ <span class="fragment" data-fragment-index="1">javac simonis/Nested.java
$ </span><span class="fragment" data-fragment-index="2">ll simonis/
-rw-rw-r-- 1 simonis simonis 1085 Okt 13 10:02 Nested.class
-rw-rw-r-- 1 simonis simonis  271 Okt 13 10:02 Nested$NestedClass.class
$ </span><span class="fragment" data-fragment-index="3">java simonis.Nested</span>
<span class="fragment" data-fragment-index="4">Name:             simonis.Nested$NestedClass
Package name:     simonis
Member:           <span class="fragment highlight-current-border" data-fragment-index="5">true</span>
Local:            false
Anonymous:        false
Synthetic:        false
Declaring class:  <span class="fragment highlight-current-border border-no-bottom" data-fragment-index="6">class simonis.Nested</span>
Enclosing class:  <span class="fragment highlight-current-border border-no-top   " data-fragment-index="6">class simonis.Nested</span>
Enclosing method: null</span>
              </code>
            </pre>
          </section>

          <section class="demo">

            <h2>Nested classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class Nested {
  static class NestedClass {
    <span class="fragment highlight-current-border">private</span> NestedClass() {} // Not accessible!
  }
  public static void main(String... args) {
    NestedClass nc = new NestedClass();
    TopLevel.printClassAttrs(nc.getClass());
    ...
  }
}
              </code>
            </pre>
          </section>

          <section class="demo">

            <h2>Nested classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ <span class="fragment" data-fragment-index="1">javac simonis/Nested.java
$ </span><span class="fragment" data-fragment-index="2">ll simonis/
-rw-rw-r-- 1 simonis simonis  182 Okt 13 10:02 <span class="fragment highlight-border" data-fragment-index="3">Nested$1.class</span>
-rw-rw-r-- 1 simonis simonis 1085 Okt 13 10:02 Nested.class
-rw-rw-r-- 1 simonis simonis  387 Okt 13 10:02 Nested$NestedClass.class
$ </span><span class="fragment" data-fragment-index="4">java simonis.Nested</span>
<span class="fragment" data-fragment-index="5">Name:             simonis.Nested$NestedClass
Package name:     simonis
Member:           <span class="fragment highlight-current-border" data-fragment-index="6">true</span>
Local:            false
Anonymous:        false
Synthetic:        false
Declaring class:  <span class="fragment highlight-current-border border-no-bottom" data-fragment-index="7">class simonis.Nested</span>
Enclosing class:  <span class="fragment highlight-current-border border-no-top   " data-fragment-index="7">class simonis.Nested</span>
Enclosing method: null</span>
              </code>
            </pre>
          </section>

          <section class="demo">

            <h2>Nested classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class Nested {
  static class NestedClass {
    private NestedClass() {} // Not accessible!
  }
  public static void main(String... args) {
    NestedClass nc = new NestedClass();
    TopLevel.printClassAttrs(nc.getClass());
    <span class="fragment highlight-border">TopLevel.printClassAttrs(Class.forName("simonis.Nested$1"));</span>
  }
}
              </code>
            </pre>
          </section>

          <section class="demo">

            <h2>Nested classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ javac simonis/Nested.java
$ <span class="fragment" data-fragment-index="1">ll simonis/
-rw-rw-r-- 1 simonis simonis  182 Okt 13 10:02 Nested$1.class
-rw-rw-r-- 1 simonis simonis 1085 Okt 13 10:02 Nested.class
-rw-rw-r-- 1 simonis simonis  387 Okt 13 10:02 Nested$NestedClass.class
$ </span><span class="fragment" data-fragment-index="2">java simonis.Nested     
</span><span class="fragment" data-fragment-index="3">...
Name:             simonis.Nested$1
Package name:     simonis
Member:           false
Local:            false
Anonymous:        <span class="fragment highlight-current-border" data-fragment-index="4">true</span> <span class="fragment" data-fragment-index="4">// Class has no name</span>
Synthetic:        <span class="fragment highlight-current-border" data-fragment-index="5">true</span> <span class="fragment" data-fragment-index="5">// Class generated by the compiler</span>
Declaring class:  null
Enclosing class:  class simonis.Nested
Enclosing method: null
</span>
              </code>
            </pre>
          </section>

          <section class="demo">

            <h2>Nested classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ java -jar ecj.jar simonis/Nested.java
$ <span class="fragment" data-fragment-index="1">ll simonis/
-rw-rw-r-- 1 simonis simonis 1085 Okt 13 10:02 Nested.class
-rw-rw-r-- 1 simonis simonis  387 Okt 13 10:02 Nested$NestedClass.class
$ </span><span class="fragment" data-fragment-index="2">java simonis.Nested</span>
<span class="fragment" data-fragment-index="3">Exception in thread "main" java.lang.ClassNotFoundException: simonis.Nested$1
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass()
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass()
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:496)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:292)
	at simonis.Nested.main(Nested.java:15)
</span>
              </code>
            </pre>
          </section>

          <section class="demo">

            <h2>Nested classes</h2>

            <div style="width: 100%">
              <div style="float: left; width: 46%">

                <h3><code>JAVAC</code></h3>

                <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
                  <code class="java" data-trim="true" data-noescape="true" style="height:100%">
$ javac simonis/Nested.java
$ javap simonis.Nested$NestedClass
...
Compiled from "Nested.java"
class Nested$NestedClass {
  private Nested$NestedClass();
    ...
  <span class="fragment highlight-current-border" data-fragment-index="1">Nested$NestedClass(Nested$1);</span>
    flags: (0x1000) <span class="fragment highlight-current-border" data-fragment-index="2">ACC_SYNTHETIC</span>
    Code:
     0: aload_0
     1: invokespecial #1 // "&lt;init&gt;"
     4: return
}
                  </code>
                </pre>

              </div>
              <div style="position:relative; float: right; width: 52%">

                <h3><code>ECJ</code></h3>

                <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
                  <code class="java" data-trim="true" data-noescape="true" style="height:100%">
$ java -jar ecj.jar simonis/Nested.java
$ javap simonis.Nested$NestedClass
...
Compiled from "Nested.java"
class Nested$NestedClass {
  private Nested$NestedClass();
    ...
  <span class="fragment highlight-current-border" data-fragment-index="1">Nested$NestedClass(Nested$NestedClass);</span>
    flags: (0x1000) <span class="fragment highlight-current-border" data-fragment-index="2">ACC_SYNTHETIC</span>
    Code:
     0: aload_0
     1: invokespecial #12 // "&lt;init&gt;"
     4: return
}
                  </code>
                </pre>

              </div>
            </div>
          </section>

          <section>

            <h2>Inner classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class Inner {
    /* not static */ class InnerClass {
    public InnerClass() {}
  }
  public static void main(String... args) {
    InnerClass ic = <span class="fragment highlight-current-border">new Inner() . new InnerClass()</span>;
    TopLevel.printClassAttrs(ic.getClass());
  }
}
              </code>
            </pre>
          </section>

          <section class="demo">

            <h2>Inner classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ <span class="fragment" data-fragment-index="1">javac simonis/Inner.java
$ </span><span class="fragment" data-fragment-index="2">ll simonis/
-rw-rw-r-- 1 simonis simonis  519 Okt 13 18:15 Inner.class
-rw-rw-r-- 1 simonis simonis  337 Okt 13 18:15 Inner$InnerClass.class
$ </span><span class="fragment" data-fragment-index="3">java simonis.Inner</span>
<span class="fragment" data-fragment-index="4">Name:             simonis.Inner$InnerClass
Package name:     simonis
Member:           true
Local:            false
Anonymous:        false
Synthetic:        false
Declaring class:  class simonis.Inner
Enclosing class:  class simonis.Inner
Enclosing method: null
</span>
              </code>
            </pre>
          </section>

          <section class="demo">

            <h2>Inner classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
$ javap -v simonis.Inner$InnerClass
...
Compiled from "Inner.java"
class simonis.Inner$InnerClass {
  <span class="fragment highlight-current-border">final simonis.Inner this$0;</span>
    flags: (0x1010) ACC_FINAL, <span class="fragment highlight-current-border">ACC_SYNTHETIC</span>
  public <span class="fragment highlight-current-border">simonis.Inner$InnerClass(simonis.Inner)</span>;
    flags: (0x0001) ACC_PUBLIC
    Code:
         0: aload_0
         1: aload_1
         2: <span class="fragment highlight-current-border">putfield      #1 // Field this$0:Lsimonis/Inner</span>;
         5: aload_0
         6: invokespecial #2 // Method java/lang/Object."&lt;init&gt;":()V
         9: return
}
              </code>
            </pre>
          </section>

          <section>

            <h2>Anonymous classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class Anonymous {

  public static void main(String... args) {
    Runnable r = new Runnable() {
      public void run() {}
    };
    TopLevel.printClassAttrs(r.getClass());
  }
}
              </code>
            </pre>
          </section>

          <section class="demo">

            <h2>Anonymous classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ <span class="fragment" data-fragment-index="1">javac simonis/Anonymous.java
$ </span><span class="fragment" data-fragment-index="2">ll simonis/
-rw-rw-r-- 1 simonis simonis  392 Okt 13 17:39 <span class="fragment highlight-current-border" data-fragment-index="3">Anonymous$1.class</span>
-rw-rw-r-- 1 simonis simonis  471 Okt 13 17:39 Anonymous.class
$ </span><span class="fragment" data-fragment-index="4">java simonis.Anonymous</span>
<span class="fragment" data-fragment-index="5">Name:             simonis.Anonymous$1
Package name:     simonis
Member:           false
Local:            false
Anonymous:        <span class="fragment highlight-current-border" data-fragment-index="6">true</span>
Synthetic:        <span class="fragment highlight-current-border" data-fragment-index="7">false</span>
Declaring class:  null
Enclosing class:  class simonis.Anonymous
Enclosing method: <span class="fragment highlight-current-border" data-fragment-index="8">public static void simonis.Anonymous.main(String[])</span></span>
              </code>
            </pre>
          </section>

          <section>

            <h2>Local classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class Local {

  public static void main(String... args) {
    class LocalClass {
      LocalClass() {}
    }
    LocalClass l = new LocalClass();
    TopLevel.printClassAttrs(l.getClass());
  }
}
              </code>
            </pre>
          </section>

          <section class="demo">

            <h2>Local classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ <span class="fragment" data-fragment-index="1">javac simonis/Local.java
$ </span><span class="fragment" data-fragment-index="2">ll simonis/
-rw-rw-r-- 1 simonis simonis  332 Okt 13 18:44 <span class="fragment highlight-current-border" data-fragment-index="3">Local$1LocalClass.class</span>
-rw-rw-r-- 1 simonis simonis  482 Okt 13 18:44 Local.class
$ </span><span class="fragment" data-fragment-index="4">java simonis.Local</span>
<span class="fragment" data-fragment-index="5">Name:             simonis.Local$1LocalClass
Package name:     simonis
Member:           false
Local:            <span class="fragment highlight-current-border" data-fragment-index="6">true</span>
Anonymous:        <span class="fragment highlight-current-border border-no-bottom" data-fragment-index="7">false</span>
Synthetic:        <span class="fragment highlight-current-border border-no-top" data-fragment-index="7">false</span>
Declaring class:  null
Enclosing class:  class simonis.Local
Enclosing method: <span class="fragment highlight-current-border" data-fragment-index="8">public static void simonis.Local.main(String[])</span></span>
              </code>
            </pre>
          </section>

        </section>

        <section class="demo">

          <section>

            <h2>VM-Anonymous classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class VmAnonymous {

  public static void main(String... args) {
    Runnable r = () -> {
      new Exception("Hello World!") . printStackTrace();
    };
    TopLevel.printClassAttrs(r.getClass());
    r.run();
  }
}
              </code>
            </pre>
          </section>

          <section class="demo">

            <h2>VM-Anonymous classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ <span class="fragment" data-fragment-index="1">javac simonis/VmAnonymous.java
$ </span><span class="fragment" data-fragment-index="2">ll simonis/
-rw-rw-r-- 1 simonis simonis 1672 Okt 13 19:27 VmAnonymous.class
$ </span><span class="fragment" data-fragment-index="4">java simonis.VmAnonymous</span>
<span class="fragment" data-fragment-index="5">Name:             <span class="fragment highlight-current-border" data-fragment-index="6">simonis.VmAnonymous$$Lambda$1/88579647</span>
Package name:     simonis
Member:           false
Local:            false
Anonymous:        <span class="fragment highlight-current-border" data-fragment-index="7">false</span>
Synthetic:        <span class="fragment highlight-current-border" data-fragment-index="8">true</span>
Declaring class:  null
Enclosing class:  null
Enclosing method: null
...
</span>
              </code>
            </pre>
          </section>

          <section class="demo">

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
...
<span class="fragment">java.lang.Exception: Hello World!
	at simonis.VmAnonymous.lambda$0(VmAnonymous.java:9)
	at simonis.VmAnonymous.main(VmAnonymous.java:12)
$ </span><span class="fragment">java -XX:+UnlockDiagnosticVMOptions <span class="fragment highlight-current-border">-XX:+ShowHiddenFrames</span> simonis.VmAnonymous</span>
<span class="fragment">...
java.lang.Exception: Hello World!
	at simonis.VmAnonymous.lambda$0(VmAnonymous.java:9)
	at <span class="fragment highlight-current-border">simonis.VmAnonymous$$Lambda$1/88579647.run(&lt;Unknown&gt;:1000000)</span>
	at simonis.VmAnonymous.main(VmAnonymous.java:12)
$ </span><span class="fragment">java <span class="fragment highlight-current-border">-Djdk.internal.lambda.dumpProxyClasses=/tmp</span> simonis.VmAnonymous</span>
<span class="fragment">...
$ </span><span class="fragment">ls -l /tmp/*.class</span>
<span class="fragment">...
-rw-rw-r-- 1 simonis simonis 336 Okt 13 19:43 VmAnonymous$$Lambda$1.class</span>
              </code>
            </pre>
          </section>

          <section>

            <h2>Stack-Walking API (<a href="http://openjdk.java.net/jeps/259">JEP 259</a>)</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class VmAnonymous2 {

  public static void main(String... args) {
    Runnable r = () -&gt; {
      StackWalker sw = <span class="fragment highlight-current-border">StackWalker.getInstance(<span class="fragment highlight-current-border">Option.SHOW_HIDDEN_FRAMES</span>)</span>;
      sw.forEach(System.out::println);
    };
    r.run();
  }
}
              </code>
            </pre>
            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ <span class="fragment">java simonis.VmAnonymous
simonis.VmAnonymous2.lambda$0(VmAnonymous2.java:14)
simonis.VmAnonymous2$$Lambda$1/88579647.run(Unknown Source)               
simonis.VmAnonymous2.main(VmAnonymous2.java:22)</span>
              </code>
            </pre>
          </section>

          <section>

            <h2>VM-Anonymous classes</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class VmAnonymous3 {

  public static void main(String... args) {
    Runnable r = () -> {
      new Exception("Hello World!") . printStackTrace();                       
      <span class="fragment highlight-current-border">System.console().readLine()</span>;
    };
    r.run();
  }
}
              </code>
            </pre>
            <div style="width: 100%">
              <div style="float: left; width: 76%">

                <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
                  <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ <span class="fragment">java -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames\
       simonis.VmAnonymous3
java.lang.Exception: Hello World!
      at simonis.VmAnonymous3.lambda$0(VmAnonymous3.java:7)
      at simonis.VmAnonymous3$$Lambda$1/97730845.run(...)
      at simonis.VmAnonymous3.main(VmAnonymous3.java:10)</span>
                  </code>
                </pre>

              </div>
              <div style="position:relative; float: right; width: 24%">

<!--
/share/output-jdk10-hs-opt/images/jdk/bin/jhsdb hsdb -J-Dswing.plaf.metal.userFont=adobe-helvetica-bold-14
-->
                <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
                  <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ <span class="fragment">jps
22436 VmAnonymous3
$ </span><span class="fragment">jhsdb hsdb  </span>



<span></span>
                  </code>
                </pre>

              </div>
            </div>

          </section>

          <section style="height:100%" data-background="images/SA_01.png" data-background-size="auto" data-background-color="#ffffff">
          </section>

          <section style="height:100%" data-background="images/SA_02.png" data-background-size="auto" data-background-color="#ffffff">
          </section>

          <section style="height:100%" data-background="images/SA_03a.png" data-background-size="auto" data-background-color="#ffffff">
          </section>

          <section style="height:100%" data-background="images/SA_04a.png" data-background-size="auto" data-background-color="#ffffff">
          </section>

          <section style="height:100%" data-background="images/SA_05a.png" data-background-size="auto" data-background-color="#ffffff">
          </section>

        </section>


        <section class="demo">

          <section class="demo">

            <h2>Class Identity</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
package simonis;
public class TwoLoaders {

 public static void main(String[] args) throws ... {

  <span class="fragment highlight-current-border" data-fragment-index="1">TwoLoaders tl1 = new TwoLoaders();</span>

  <span class="fragment highlight-current-border border-no-bottom" data-fragment-index="2">ClassLoader cl = new URLClassLoader(                                       </span>
  <span class="fragment highlight-current-border border-no-top"    data-fragment-index="2">                   new URL[] { TwoLoaders.class.getResource("..") }, null);</span>

  <span class="fragment highlight-current-border" data-fragment-index="3">Object tl2 = cl.loadClass("simonis.TwoLoaders").newInstance();</span>

  System.out.println(<span class="fragment highlight-current-border" data-fragment-index="4">tl2.getClass().getName()</span>.equals(<span class="fragment highlight-current-border" data-fragment-index="4">tl1.getClass().getName()</span>)

  System.out.println(<span class="fragment highlight-current-border" data-fragment-index="6">tl2 instanceof simonis.TwoLoaders</span>);

  <span class="fragment highlight-current-border" data-fragment-index="8">tl1 = (TwoLoaders)tl2</span>;
              </code>
            </pre>


<div class="quiz fragment" data-fragment-index="5">
  <!-- Quiz content -->
  <div class="quiz-content">
    <div class="quiz-header">
      <h2>Whats the output of <br/><code style='font-size: smaller;'>tl2.getClass().getName().equals(tl1.getClass().getName())</code><br/> ?</h2>
    </div>
    <div class="quiz-body">
      <ol>
        <li>true</li>
        <li>false</li>
      </ol>
    </div>
    <div class="quiz-footer">
      &nbsp;
    </div>
  </div>
</div>

<div class="quiz fragment" data-fragment-index="7">
  <!-- Quiz content -->
  <div class="quiz-content">
    <div class="quiz-header">
      <h2>Whats the output of<br/> <code style='font-size: smaller;'>tl2 instanceof simonis.TwoLoaders</code><br/> ?</h2>
    </div>
    <div class="quiz-body">
      <ol>
        <li>true</li>
        <li>false</li>
      </ol>
    </div>
    <div class="quiz-footer">
      &nbsp;
    </div>
  </div>
</div>

<div class="quiz fragment" data-fragment-index="9">
  <!-- Quiz content -->
  <div class="quiz-content">
    <div class="quiz-header">
      <h2>What about "<code style='font-size: smaller;'>tl1 = (TwoLoaders)tl2</code>" ?</h2>
    </div>
    <div class="quiz-body">
      <ol>
        <li>Compile error.</li>
        <li>Runtime error.</li>
        <li>Runs just fine.</li>
      </ol>
    </div>
    <div class="quiz-footer">
      &nbsp;
    </div>
  </div>
</div>

          </section>

          <section class="demo">

            <h2>Class Identity</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ java simonis.TwoLoaders
<span class="fragment" data-fragment-index="1">true
false
Exception in thread "main"
  java.lang.ClassCastException:
    <span class="fragment highlight-current-border" data-fragment-index="2">simonis.TwoLoaders cannot be cast to simonis.TwoLoaders</span>
	at simonis.TwoLoaders.main(TwoLoaders.java:14)
$ </span><span class="fragment" data-fragment-index="3">sapjvm/bin/java simonis.TwoLoaders
...
  java.lang.ClassCastException:
    Cannot cast
      class simonis.TwoLoaders
       <span class="fragment highlight-current-border" data-fragment-index="4">(loader java.net.URLClassLoader [id=8020,parents=&lt;bootstrap&gt;])</span> to
      class simonis.TwoLoaders
       <span class="fragment highlight-current-border" data-fragment-index="4">(loader System [class=sun.misc.Launcher$AppClassLoader,urls=file:/tmp/])</span>
	at simonis.TwoLoaders.main(TwoLoaders.java:14)</span>
              </code>
            </pre>
          </section>
<!--
          <section>

            <h2>Initiating vs. Defining Class Loader</h2>

          </section>
-->
        </section>


        <section class="demo">

          <section>

            <h2>CHA - Class Hierarchy Analysis</h2>

            <div style="width: 100%">
              <div style="float: left; width: 40%">

               <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
                  <code class="java" data-trim="true" data-noescape="true" style="height:100%">
package simonis;

public class CHA {

  static class A {
    void f() {}
  }

  static class B extends A {
    void f() {}
  }

  static void g(A a) {
    a.f();
  }

  ...
                  </code>
                </pre>

              </div>
              <div style="position:relative; float: right; width: 60%">

                <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
                  <code class="java" data-trim="true" data-noescape="true" style="height:100%">
<span/>
  ...

  public static void main (String[] args) {

    A a = new A();
    for (int i = 0; i &lt; 20_000; i++) {
      g(a);  // JIT compile g()
    }

    B b = new B();

    for (int i = 0; i &lt; 20_000; i++) {
      g(a);
    }
  }
}
                  </code>
                </pre>

              </div>
            </div>
          </section>

          <section class="demo">

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ java -Xbatch -XX:-TieredCompilation -XX:-UseOnStackReplacement \
       <span class="fragment highlight-current-border">-XX:+PrintCompilation -XX:+PrintInlining</span> simonis.CHA
<span class="fragment">   ...
   1020    4    b      <span class="fragment highlight-current-border">simonis.CHA::g</span> (5 bytes)
                          @ 1   <span class="fragment highlight-current-border">simonis.CHA$A::f (1 bytes)   inline (hot)</span>
   1033    4           simonis.CHA::g (5 bytes)   <span class="fragment highlight-current-border">made not entrant</span>
   1035    6    b      <span class="fragment highlight-current-border">simonis.CHA::g</span> (5 bytes)
                          @ 1   <span class="fragment highlight-current-border">simonis.CHA$A::f (1 bytes)   inline (hot)</span>
                           \-&gt; <span class="fragment highlight-current-border">TypeProfile (11699/11699 counts) = simonis/CHA$A</span>

$ </span><span class="fragment">java -Xbatch -XX:-TieredCompilation -XX:-UseOnStackReplacement \
       -XX:+PrintCompilation -XX:+PrintInlining <span class="fragment highlight-current-border">-Xlog:class+load</span> simonis.CHA</span>
<span class="fragment">   ...
   <span class="fragment highlight-current-border">[1,018s][info][class,load] simonis.CHA$A</span>
   1020    4    b      simonis.CHA::g (5 bytes)
                          @ 1   simonis.CHA$A::f (1 bytes)   inline (hot)
   <span class="fragment highlight-current-border">[1,033s][info][class,load] simonis.CHA$B</span>
   1033    4           simonis.CHA::g (5 bytes)   made not entrant
   1035    6    b      simonis.CHA::g (5 bytes)
                          @ 1   simonis.CHA$A::f (1 bytes)   inline (hot)
                           \-&gt; TypeProfile (11699/11699 counts) = simonis/CHA$A</span>
              </code>
            </pre>
          </section>

          <section class="demo">

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ java ... <span class="fragment highlight-current-border border-no-bottom" data-fragment-index="1">-XX:CompileCommand="print simonis.CHA::g"</span> \
           <span class="fragment highlight-current-border border-no-top   " data-fragment-index="1">-XX:+TraceDependencies                   </span>  simonis.CHA
<span class="fragment" data-fragment-index="2">...
//  void simonis/CHA.g(simonis/CHA$A*)
//
000  B1:pushq   rbp              // Save rbp
        subq    rsp, #16         // Create frame
00c     testq   RSI, RSI         // <span class="fragment highlight-current-border border-no-bottom" data-fragment-index="3">parm0:simonis/CHA$A*</span>
00f     je,s    B3               // <span class="fragment highlight-current-border border-no-top   " data-fragment-index="3">Null-pointer check  </span>
011  B2:addq    rsp, 16          // Destroy frame
        popq    rbp
        testl   rax, [#poll_page]// Safepoint: poll for GC
01c     ret
...</span>
<span class="fragment" data-fragment-index="4">Dependencies:
<span class="fragment highlight-current-border" data-fragment-index="5">Dependency of type unique_concrete_method</span>
  context = simonis.CHA$A
  method  = {method} {0x00007fd6ac477868} 'f' '()V' in 'simonis/CHA$A'
   [nmethod&lt;=klass]simonis.CHA$A
...</span>
              </code>
            </pre>
          </section>

          <section class="demo">

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
<span class="fragment highlight-current-border" data-fragment-index="1">[1,006s][info][class,load] simonis.CHA$B</span>
<span class="fragment highlight-current-border" data-fragment-index="2">Failed dependency of type unique_concrete_method</span>
  <span class="fragment highlight-current-border" data-fragment-index="3">context = simonis.CHA$A</span>
  method  = {method} {0x00007fe759c00868} 'f' '()V' in 'simonis/CHA$A'
  <span class="fragment highlight-current-border" data-fragment-index="3">witness = simonis.CHA$B</span>
<span class="fragment highlight-current-border" data-fragment-index="4">Marked for deoptimization: Compiled method (c2) simonis.CHA::g (5 bytes)</span>
...
<span class="fragment" data-fragment-index="5">//  void simonis/CHA.g(simonis/CHA$A*)
//
...
00c     movl    R11, [RSI + #8]     // compressed klass ptr (NullCheck RSI)
010  B2:<span class="fragment highlight-current-border" data-fragment-index="6">cmpl    R11, 0x7fe7440920a0</span> // narrowklass: precise <span class="fragment highlight-current-border" data-fragment-index="6">klass simonis/CHA$A</span>
017     jne,us  B4
019  B3:addq    rsp, 16             // Destroy frame
        popq    rbp
        testl   rax, [#poll_page]   // Safepoint: poll for GC
024     ret
025  B4:<span class="fragment highlight-current-border" data-fragment-index="7">call    uncommon_trap(reason='class_check' action='maybe_recompile')</span></span>
              </code>
            </pre>
          </section>

          <section>

            <h2>CHA - Class Hierarchy Analysis</h2>

            <div style="width: 100%">
              <div style="float: left; width: 40%">

               <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
                  <code class="java" data-trim="true" data-noescape="true" style="height:100%">
package simonis;

public class CHA2 {

  static class A {
    void f() {}
  }

  static class B extends A {
    void f() {}
  }

  static void g(A a) {
    a.f();
  }

  ...
                  </code>
                </pre>

              </div>
              <div style="position:relative; float: right; width: 60%">

                <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
                  <code class="java" data-trim="true" data-noescape="true" style="height:100%">
<span/>
  ...

  public static void main (String[] args) {

    A a = new A();
    for (int i = 0; i &lt; 20_000; i++) {
      g(a);  // JIT compile g()
    }

    <mark class="border">A b = new B()</mark>; // was B b = new B();

    for (int i = 0; i &lt; 20_000; i++) {
      g(a);
    }
  }
}
                  </code>
                </pre>

              </div>
            </div>


<div class="quiz fragment">
  <!-- Quiz content -->
  <div class="quiz-content">
    <div class="quiz-header">
      <h2>What happens if we change <br/><code style='font-size: smaller;'>B b = new B()</code> to <code style='font-size: smaller;'>A b = new B()</code><br/> ?</h2>
    </div>
    <div class="quiz-body">
      <ol>
        <li>Same behaviour as before</li>
        <li>Same behaviour as before but without inlining of <code style='font-size: smaller;'>f()</code> into <code style='font-size: smaller;'>g()</code></li>
        <li>No more recompilation</li>
      </ol>
    </div>
    <div class="quiz-footer">
      &nbsp;
    </div>
  </div>
</div>
          </section>

          <section class="demo">

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ java -Xbatch -XX:-TieredCompilation -XX:-UseOnStackReplacement \
       -XX:+PrintCompilation -XX:+PrintInlining -Xlog:class+load simonis.CHA2
<span class="fragment" data-fragment-index="1">   ...
   <span class="fragment highlight-current-border border-no-bottom" data-fragment-index="2">[1,012s][info][class,load] simonis.CHA2$A</span>
   <span class="fragment highlight-current-border border-no-top   " data-fragment-index="2">[1,018s][info][class,load] simonis.CHA2$B</span>
   1025    4    b      simonis.CHA2::g (5 bytes)
                          @ 1   simonis.CHA2$A::f (1 bytes)   inline (hot)
                           \-> TypeProfile (6700/6700 counts) = simonis/CHA2$A

$ </span><span class="fragment" data-fragment-index="4">java -Xbatch -XX:-TieredCompilation -XX:-UseOnStackReplacement <mark class="border">-noverify</mark> \
       -XX:+PrintCompilation -XX:+PrintInlining -Xlog:class+load simonis.CHA2
<span class="fragment" data-fragment-index="5">   ...
   <span class="fragment highlight-current-border" data-fragment-index="6">[0,993s][info][class,load] simonis.CHA2$A</span>
   995    4    b       simonis.CHA2::g (5 bytes)
                          @ 1   simonis.CHA2$A::f (1 bytes)   inline (hot)
   <span class="fragment highlight-current-border" data-fragment-index="7">[1,007s][info][class,load] simonis.CHA2$B</span>
   1007   4            simonis.CHA2::g (5 bytes)   made not entrant
   1008   6    b       simonis.CHA2::g (5 bytes)
                          @ 1   simonis.CHA2$A::f (1 bytes)   inline (hot)
                           \-> TypeProfile (11699/11699 counts) = simonis/CHA2$A
</span></span>
              </code>
            </pre>


<div class="quiz fragment" data-fragment-index="3">
  <!-- Quiz content -->
  <div class="quiz-content">
    <div class="quiz-header">
      <h2>What happens if we use <code style='font-size: smaller;'>-noverify</code> ?</h2>
    </div>
    <div class="quiz-body">
      <ol>
        <li>Same behaviour as before (just one compilation)</li>
        <li>Initial behaviour (compilation / deoptimization / compilation)</li>
      </ol>
    </div>
    <div class="quiz-footer">
      &nbsp;
    </div>
  </div>
</div>
          </section>

          <section data-background="images/JPoint2017_Lipsky_Verification.png" data-background-size="auto" data-background-color="#ffffff">

            <a href="http://2017.jpoint.ru/en/talks/java-byte-code-verification-when-how-or-maybe-to-turn-it-off/">
              <div style="width: 800px; height: 800px"></div>
            </a>
<!--
http://downloads.contentful.com/oxjq45e8ilak/2SP89wQio8Ye6EEuy2McyK/6407e07416de0119be00c63bf2c8b1f9/Nikita_Lipsky._Java_Bytecode_Verification.pdf
-->

          </section>

        </section>


        <section class="demo">

          <section>

            <h2>Class Instrumentation / Redefinition</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
package java.lang.instrument;

public interface Instrumentation {
  void  <span class="fragment highlight-current-border" data-fragment-index="1">addTransformer(<span class="fragment highlight-current-border" data-fragment-index="2">ClassFileTransformer transformer</span>)</span>;
  public boolean isRetransformClassesSupported();
  public void <span class="fragment highlight-current-border" data-fragment-index="5">retransformClasses(Class&lt;?&gt;... classes)</span>;
  public boolean isRedefineClassesSupported();
  public void <span class="fragment highlight-current-border" data-fragment-index="6">redefineClasses(ClassDefinition... definitions)</span>;
}

public interface <span class="fragment highlight-current-border" data-fragment-index="2">ClassFileTransformer</span> {
  public <span class="fragment highlight-current-border" data-fragment-index="4">byte[]</span> <span class="fragment highlight-current-border" data-fragment-index="3">transform</span>(ClassLoader cl, String className
                          Class&lt;?&gt; classBeingRedefined, ProtectionDomain pd,
                          <span class="fragment highlight-current-border" data-fragment-index="4">byte[] classfileBuffer</span>)
  ...
}
              </code>
            </pre>
<!--
Arrays.asList(inst.getAllLoadedClasses()).stream().filter(c -> inst.isModifiableClass(c)).toArray(Class<?>[]::new)

Can not retransform / redefine VM-Anonymous classes:

8145964: NoClassDefFound error in transforming lambdas
https://bugs.openjdk.java.net/browse/JDK-8145964
-->

          </section>

          <section>

            <h2>Creating an Instrumentation Agent</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
Manifest-Version: 1.0
Premain-Class: <span class="fragment highlight-current-border" data-fragment-index="1">simonis.InstAgent</span>
Can-Retransform-Classes: true                                    
Can-Redefine-Classes: true
              </code>
            </pre>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class <span class="fragment highlight-current-border" data-fragment-index="1">InstAgent</span> {

  public static void premain(String args, Instrumentation inst) {
    ...
  }
}
              </code>
            </pre>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ jar cvfm <span class="fragment highlight-current-border" data-fragment-index="2">InstAgent.jar</span> manifest.mf simonis/InstAgent.class
                                                                 
$ java -javaagent:<span class="fragment highlight-current-border" data-fragment-index="3">InstAgent.jar</span>='arguments' ApplicationClass
              </code>
            </pre>
          </section>

          <section class="demo">

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class InstAgent {
  static <span class="fragment highlight-current-border" data-fragment-index="1"><span class="fragment highlight-current-border" data-fragment-index="6">Instrumentation inst</span></span>;
  static <span class="fragment highlight-current-border" data-fragment-index="2">String          pattern</span>;
  static int             count;

  public static void premain(<span class="fragment highlight-current-border" data-fragment-index="2">String args</span>, <span class="fragment highlight-current-border" data-fragment-index="1">Instrumentation inst</span>) {
    <span class="fragment highlight-current-border" data-fragment-index="1">InstAgent.inst = inst</span>;
    <span class="fragment highlight-current-border" data-fragment-index="2">pattern = args</span>;
    <span class="fragment highlight-current-border" data-fragment-index="3">inst.addTransformer(new MethodInstrumentorTransformer(), true)</span>;
  }
  static class <span class="fragment highlight-current-border" data-fragment-index="3">MethodInstrumentorTransformer implements ClassFileTransformer</span> {
    @Override
    public byte[] <span class="fragment highlight-current-border" data-fragment-index="4">transform(.., String className, .., byte[] classfileBuffer)</span> {
      if (!<span class="fragment highlight-current-border" data-fragment-index="5">className.startsWith(pattern)</span>) return null;  // No transformation,
      ... // else transform to print a message at every method entry and exit
    }
  }
  public static <span class="fragment highlight-current-border" data-fragment-index="6">Instrumentation getInst()</span> {
    count++;
    <span class="fragment highlight-current-border" data-fragment-index="6">return inst</span>;
  }
              </code>
            </pre>
          </section>

          <section class="demo">

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class Instrument {
  public static void main(String[] args) {
    Runnable r = () -> {
      new Exception("Hello World!") . printStackTrace();                        
    };
    r.run();
  }
}
              </code>
            </pre>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ java <span class="fragment highlight-current-border" data-fragment-index="1">-javaagent:InstAgent.jar=simonis</span> <span class="fragment highlight-current-border" data-fragment-index="1">-XX:+ShowHiddenFrames</span> simonis.Instrument
<span class="fragment" data-fragment-index="2">=&gt; <span class="fragment highlight-current-border" data-fragment-index="3">transformimg simonis/Instrument</span>
-&gt; <span class="fragment highlight-current-border" data-fragment-index="4">simonis.Instrument::main([Ljava/lang/String;)V</span>
-&gt; <span class="fragment highlight-current-border" data-fragment-index="5">simonis.Instrument::lambda$0()V</span>
java.lang.Exception: Hello World!
	at simonis.Instrument.lambda$0(Instrument.java:7)
	at <span class="fragment highlight-current-border" data-fragment-index="8">simonis.Instrument$$Lambda$1/1556595366.run</span>(&lt;Unknown&gt;:1000000)
	at simonis.Instrument.main(Instrument.java:9)
&lt;- <span class="fragment highlight-current-border" data-fragment-index="6">simonis.Instrument::lambda$0()V</span>
&lt;- <span class="fragment highlight-current-border" data-fragment-index="7">simonis.Instrument::main([Ljava/lang/String;)V</span></span>
              </code>
            </pre>
          </section>

          <section class="demo">

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class Instrument2 {
  static CountDownLatch <span class="fragment highlight-current-border"     data-fragment-index="2">stop = new CountDownLatch(1)</span>;

  public static class A {
    <span class="fragment highlight-current-border border-no-bottom"     data-fragment-index="1">public static Runnable getRunnable() {           </span>
    <span class="fragment highlight-current-border border-no-bottom-top" data-fragment-index="1">  return () -&gt; {                                 </span>
    <span class="fragment highlight-current-border border-no-bottom-top" data-fragment-index="1">    try { <span class="fragment highlight-current-border" data-fragment-index="2">stop.await()</span>; } catch (Exception e) {};</span>
    <span class="fragment highlight-current-border border-no-bottom-top" data-fragment-index="1">  };                                             </span>
    <span class="fragment highlight-current-border border-no-top"        data-fragment-index="1">}                                                </span>
  }
  public static void main(String[] args) throws ... {
    Runnable <span class="fragment highlight-current-border" data-fragment-index="3">r = A.getRunnable()</span>;

    for (int i = 0; i &lt; 10; i++) {
      <span class="fragment highlight-current-border" data-fragment-index="4">InstAgent.getInst()</span>.<span class="fragment highlight-current-border" data-fragment-index="5">retransformClasses(Instrument2.A.class)</span>;
      <span class="fragment highlight-current-border" data-fragment-index="6">new Thread(r).start()</span>;
    }

    <span class="fragment highlight-current-border" data-fragment-index="7">System.in.read()</span>;
              </code>
            </pre>
          </section>

          <section class="demo">

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ java <span class="fragment highlight-current-border" data-fragment-index="1">-javaagent:InstAgent.jar='simonis/Instrument2$A'</span> simonis.Instrument2
<span class="fragment" data-fragment-index="2">=&gt; <span class="fragment highlight-current-border" data-fragment-index="3">transformimg simonis/Instrument2$A</span>
...
=&gt; <span class="fragment highlight-current-border" data-fragment-index="4">re-transforming simonis/Instrument2$A</span>
0&gt; <span class="fragment highlight-current-border" data-fragment-index="5">simonis.Instrument2$A::lambda$0()V</span>
=&gt; <span class="fragment highlight-current-border" data-fragment-index="6">re-transforming simonis/Instrument2$A</span>
1&gt; <span class="fragment highlight-current-border" data-fragment-index="7">simonis.Instrument2$A::lambda$0()V</span>
=&gt; re-transforming simonis/Instrument2$A
...
9&gt; <span class="fragment highlight-current-border" data-fragment-index="8">simonis.Instrument2$A::lambda$0()V</span></span>

<span class="fragment" data-fragment-index="10">$ <span class="fragment highlight-current-border" data-fragment-index="11">jcmd &lt;pid&gt; GC.class_stats</span> InstBytes,KlassBytes,MethodCount,Bytecodes</span>
<span class="fragment" data-fragment-index="12">Index InstBytes KlassBytes Bytecodes ClassName
  320        16        528         9 simonis.Instrument2$A$$Lambda$1/985922955
  768         0        496        80 simonis.Instrument2
  769         0        496        70 <span class="fragment highlight-current-border border-no-bottom"     data-fragment-index="13">simonis.Instrument2$A</span>
  770         0        496        70 <span class="fragment highlight-current-border border-no-bottom-top" data-fragment-index="13">simonis.Instrument2$A</span>
  ...         .        ...        .. <span class="fragment highlight-current-border border-no-bottom-top" data-fragment-index="13">.....................</span>
  776         0        496        70 <span class="fragment highlight-current-border border-no-bottom-top" data-fragment-index="13">simonis.Instrument2$A</span>
  777         0        496        70 <span class="fragment highlight-current-border border-no-top"        data-fragment-index="13">simonis.Instrument2$A</span></span>
              </code>
            </pre>


<div class="quiz fragment" data-fragment-index="9">
  <!-- Quiz content -->
  <div class="quiz-content">
    <div class="quiz-header">
      <h2>How many versions of class <br/><code style='font-size: smaller;'>simonis.Instrument2$A</code> <br/>do we have ?</h2>
    </div>
    <div class="quiz-body">
      <ol>
        <li>One version</li>
        <li>Several versions</li>
        <li>10 versions</li>
      </ol>
    </div>
    <div class="quiz-footer">
      &nbsp;
    </div>
  </div>
</div>
          </section>

          <section data-background="images/Arhipov_ClassReloading.png" data-background-size="auto" data-background-color="#ffffff">

            <a href="https://www.youtube.com/watch?v=SVrGupWoXAc">
              <div style="width: 800px; height: 800px"></div>
            </a>

          </section>

        </section>


        <section class="demo">

          <section>

            <h2>Class representation in the HotSpot VM</h2>

          </section>


          <section>
<!--
                <div width="100%" style="position: relative; margin: 0 0 0 0px;">
                  <div class="" style="position: static;">
                    <object data="images/class.svg" type="image/svg+xml"
                            style="width: 100%;">&nbsp;</object>
                  </div>
                  <div class="fragment" data-fragment-index="1" style="position: absolute; left: 0; top: 0; width: 100%">
                    <object data="images/class.svg" type="image/svg+xml"
                            style="width: 100%;">&nbsp;</object>
                  </div>
                  <div class="fragment" data-fragment-index="2" style="position: absolute; left: 0; top: 0; width: 100%">
                    <object data="images/class.svg" type="image/svg+xml"
                            style="width: 100%;">&nbsp;</object>
                  </div>
                </div>
-->
                <div width="100%" style="position: relative; margin: 0 0 0 0px;">
                  <div class="" style="position: static;">
                    <object data="images/CodeCacheMetaspaceHeap_1.svg" type="image/svg+xml"
                            style="width: 100%;">&nbsp;</object>
                  </div>
                  <div class="fragment" data-fragment-index="1" style="position: absolute; left: 0; top: 0; width: 100%">
                    <object data="images/CodeCacheMetaspaceHeap_2.svg" type="image/svg+xml"
                            style="width: 100%;">&nbsp;</object>
                  </div>
                  <div class="fragment" data-fragment-index="2" style="position: absolute; left: 0; top: 0; width: 100%">
                    <object data="images/CodeCacheMetaspaceHeap_3.svg" type="image/svg+xml"
                            style="width: 100%;">&nbsp;</object>
                  </div>
                  <div class="fragment" data-fragment-index="3" style="position: absolute; left: 0; top: 0; width: 100%">
                    <object data="images/CodeCacheMetaspaceHeap_4.svg" type="image/svg+xml"
                            style="width: 100%;">&nbsp;</object>
                  </div>
                  <div class="fragment" data-fragment-index="4" style="position: absolute; left: 0; top: 0; width: 100%">
                    <object data="images/CodeCacheMetaspaceHeap_5.svg" type="image/svg+xml"
                            style="width: 100%;">&nbsp;</object>
                  </div>
                  <div class="fragment" data-fragment-index="5" style="position: absolute; left: 0; top: 0; width: 100%">
                    <object data="images/CodeCacheMetaspaceHeap_6.svg" type="image/svg+xml"
                            style="width: 100%;">&nbsp;</object>
                  </div>
                  <div class="fragment" data-fragment-index="6" style="position: absolute; left: 0; top: 0; width: 100%">
                    <object data="images/CodeCacheMetaspaceHeap_7.svg" type="image/svg+xml"
                            style="width: 100%;">&nbsp;</object>
                  </div>
                  <div class="fragment" data-fragment-index="7" style="position: absolute; left: 0; top: 0; width: 100%">
                    <object data="images/CodeCacheMetaspaceHeap_8.svg" type="image/svg+xml"
                            style="width: 100%;">&nbsp;</object>
                  </div>
                  <div class="fragment" data-fragment-index="8" style="position: absolute; left: 0; top: 0; width: 100%">
                    <object data="images/CodeCacheMetaspaceHeap_9.svg" type="image/svg+xml"
                            style="width: 100%;">&nbsp;</object>
                  </div>
                  <div class="fragment" data-fragment-index="9" style="position: absolute; left: 0; top: 0; width: 100%">
                    <object data="images/CodeCacheMetaspaceHeap_10.svg" type="image/svg+xml"
                            style="width: 100%;">&nbsp;</object>
                  </div>
                  <div class="fragment" data-fragment-index="10" style="position: absolute; left: 0; top: 0; width: 100%">
                    <object data="images/CodeCacheMetaspaceHeap_11.svg" type="image/svg+xml"
                            style="width: 100%;">&nbsp;</object>
                  </div>
                </div>
          </section>

        </section>



        <section class="demo">

          <section>

            <h2>Class unloading</h2>

            <ul>
              <li>It's an <em>optimization</em> (not required by the spec)</li>
              <li>Can't simply unload/reload on request:
                <ul>
                  <li><a href="http://docs.oracle.com/javase/specs/jvms/se9/html/jvms-5.html#jvms-5.3">JVMS §5.3</a>:
                    "<em>Given the same name, <br/>a good class loader should always return the same Class object</em>"</li>
                  <li>Static initializers</li>
                </ul>
              </li>
              <li>GC dependant (happens at safepoint)
                <ul>
                  <li><a href="https://bugs.openjdk.java.net/browse/JDK-8049421">8049421: G1 Class Unloading after completing concurrent mark</a></li>
                </ul>
              </li>
              <li>Interacts with object finalization (<a href="https://docs.oracle.com/javase/specs/jls/se9/html/jls-12.html#jls-12.7">JVMLS §12.7</a>)</li>
            </ul>
          </section>

          <section class="demo">

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class Unload {

  public static class X {}

  public static void main(String[] args) throws ... {

    <span class="fragment highlight-current-border border-no-bottom" data-fragment-index="1">ClassLoader cl = new URLClassLoader(                  </span>
    <span class="fragment highlight-current-border border-no-top"    data-fragment-index="1">  new URL[] { Unload.class.getResource("..") }, null);</span>
    <span class="fragment highlight-current-border"                  data-fragment-index="2">Object o = cl.loadClass("simonis.Unload$X").newInstance();</span>    
    <span class="fragment highlight-current-border border-no-bottom" data-fragment-index="3">o = null; </span>
    <span class="fragment highlight-current-border border-no-top"    data-fragment-index="3">cl = null;</span>

    <span class="fragment highlight-current-border"                  data-fragment-index="4">systemGC();</span>
              </code>
            </pre>
            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ <span class="fragment" data-fragment-index="5">java <span class="fragment highlight-current-border" data-fragment-index="6">-Xlog:class+load,class+unload</span> simonis.Unload | grep simonis</span>
<span class="fragment" data-fragment-index="7">[info][class,load  ] simonis.Unload
[info][class,<span class="fragment highlight-current-border" data-fragment-index="8">load</span>  ] <span class="fragment highlight-current-border" data-fragment-index="8">simonis.Unload$X</span>
simonis: -&gt; <span class="fragment highlight-current-border" data-fragment-index="9">Calling System.gc() ...</span>
[info][class,<span class="fragment highlight-current-border" data-fragment-index="10">unload</span>] unloading class <span class="fragment highlight-current-border" data-fragment-index="10">simonis.Unload$X</span>
simonis: &lt;- System.gc() done
</span>
              </code>
            </pre>
          </section>

          <section class="demo">

            <h2>Class unloading and finalization</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class Unload {
  static Object <span class="fragment highlight-current-border" data-fragment-index="2">keepAlive</span>;

  public static class Y {
    <span class="fragment highlight-current-border border-no-bottom"        data-fragment-index="1">protected void finalize() throws Throwable {</span>
    <span class="fragment highlight-current-border border-no-bottom-top"    data-fragment-index="1">  <span class="fragment highlight-current-border" data-fragment-index="2">keepAlive = this</span>;                         </span>
    <span class="fragment highlight-current-border border-no-top"           data-fragment-index="1">}                                           </span>
  }
  public static void main(String[] args) throws ... {
    <span class="fragment highlight-current-border" data-fragment-index="3">ClassLoader cl = new URLClassLoader(...);</span>
    <span class="fragment highlight-current-border" data-fragment-index="4">o = cl.loadClass("simonis.Unload$Y").newInstance();</span>
    <span class="fragment highlight-current-border border-no-bottom" data-fragment-index="5">o = null; </span>
    <span class="fragment highlight-current-border border-no-top"    data-fragment-index="5">cl = null;</span>
    <span class="fragment highlight-current-border" data-fragment-index="6">systemGC();</span>

    <span class="fragment highlight-current-border" data-fragment-index="7">keepAlive = null;</span>

    <span class="fragment highlight-current-border" data-fragment-index="8">systemGC();</span>
              </code>
            </pre>

<div class="quiz fragment" data-fragment-index="9">
  <!-- Quiz content -->
  <div class="quiz-content">
    <div class="quiz-header">
      <h2>When will class <code style='font-size: smaller;'>simonis.Unload.Y</code> be unloaded ?</h2>
    </div>
    <div class="quiz-body">
      <ol>
        <li>During the first System.gc()</li>
        <li>During the second System.gc()</li>
        <li>Never</li>
      </ol>
    </div>
    <div class="quiz-footer">
      &nbsp;
    </div>
  </div>
</div>
          </section>

          <section class="demo">

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ java -Xlog:class+load,class+unload simonis.Unload | grep simonis
<span class="fragment" data-fragment-index="1">[class,<span class="fragment highlight-current-border" data-fragment-index="2">load</span>  ] <span class="fragment highlight-current-border" data-fragment-index="2">simonis.Unload</span>
[class,<span class="fragment highlight-current-border" data-fragment-index="2">load</span>  ] <span class="fragment highlight-current-border" data-fragment-index="2">simonis.Unload$Y</span>
<span class="fragment highlight-current-border border-no-bottom" data-fragment-index="3">simonis: -&gt; Calling System.gc() ...</span>
<span class="fragment highlight-current-border border-no-top"    data-fragment-index="3">simonis: &lt;- System.gc() done       </span>
[class,<span class="fragment highlight-current-border" data-fragment-index="4">load</span>  ] <span class="fragment highlight-current-border" data-fragment-index="4">simonis.Unload</span>
&lt;RETURN&gt;
<span class="fragment highlight-current-border" data-fragment-index="5">simonis: -&gt; Calling System.gc() ...</span>
[class,<span class="fragment highlight-current-border" data-fragment-index="6">unload</span>] unloading class <span class="fragment highlight-current-border" data-fragment-index="6">simonis.Unload</span>
[class,<span class="fragment highlight-current-border" data-fragment-index="6">unload</span>] unloading class <span class="fragment highlight-current-border" data-fragment-index="6">simonis.Unload$Y</span>
simonis: &lt;- System.gc() done</span>
<span class="fragment" data-fragment-index="7">$ java -Xlog:class+load<span class="fragment highlight-current-border" data-fragment-index="8">=debug</span>,class+unload<span class="fragment highlight-current-border" data-fragment-index="8">=debug</span> simonis.Unload | grep simonis</span>
<span class="fragment" data-fragment-index="9">[class,<span class="fragment highlight-current-border" data-fragment-index="10">load</span>  ] simonis.Unload <span class="fragment highlight-current-border" data-fragment-index="10">klass: 0x100060030</span> '<span class="fragment highlight-current-border" data-fragment-index="10">ClassLoaders$AppClassLoader</span>'
[class,<span class="fragment highlight-current-border" data-fragment-index="11">load</span>  ] <span class="fragment highlight-current-border" data-fragment-index="11">simonis.Unload$Y</span> <span class="fragment highlight-current-border" data-fragment-index="11"><span class="fragment highlight-current-border" data-fragment-index="14">klass: 0x100074430</span></span> '<span class="fragment highlight-current-border" data-fragment-index="11">java/net/URLClassLoader</span>'
simonis: -&gt; Calling System.gc() ...
simonis: &lt;- System.gc() done
[class,<span class="fragment highlight-current-border" data-fragment-index="12">load</span>  ] <span class="fragment highlight-current-border" data-fragment-index="12">simonis.Unload</span> <span class="fragment highlight-current-border" data-fragment-index="12"><span class="fragment highlight-current-border" data-fragment-index="13">klass: 0x100074628</span></span> '<span class="fragment highlight-current-border" data-fragment-index="12">java/net/URLClassLoader</span>'
&lt;RETURN&gt;
simonis: -&gt; Calling System.gc() ...
[class,<span class="fragment highlight-current-border" data-fragment-index="13">unload</span>] unloading class <span class="fragment highlight-current-border" data-fragment-index="13">simonis.Unload</span> <span class="fragment highlight-current-border" data-fragment-index="13">0x100074628</span>
[class,<span class="fragment highlight-current-border" data-fragment-index="14">unload</span>] unloading <span class="fragment highlight-current-border" data-fragment-index="14">class simonis.Unload$Y</span> <span class="fragment highlight-current-border" data-fragment-index="14">0x100074430</span></span>
              </code>
            </pre>
          </section>

          <section class="demo">

            <h2>Class unloading and finalization</h2>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class Unload {
  static Object keepAlive;

  public static class Y {
    protected void finalize() throws Throwable {
      keepAlive = this;
    }
  }
  public static void main(String[] args) throws ... {
    ClassLoader cl = new URLClassLoader(...);
    o = cl.loadClass("simonis.Unload$Y").newInstance();
    o = null;
    cl = null;
    systemGC();

    <span class="fragment highlight-border">// keepAlive = null;</span>

    systemGC();
              </code>
            </pre>

<div class="quiz fragment">
  <!-- Quiz content -->
  <div class="quiz-content">
    <div class="quiz-header">
      <h2>What happens when we remove <code style='font-size: smaller;'>keepAlive = null</code> ?</h2>
    </div>
    <div class="quiz-body">
      <ol>
        <li>No unloading any more</li>
        <li>Nothing changes</li>
      </ol>
    </div>
    <div class="quiz-footer">
      &nbsp;
    </div>
  </div>
</div>
          </section>

          <section class="demo">

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="java" data-trim="true" data-noescape="true" style="height:100%">
public class Unload {
  public static class Z {
    public static void run() throws InterruptedException {
      <span class="fragment highlight-current-border border-no-bottom" data-fragment-index="1">Thread.sleep(3_000);                            </span>
      <span class="fragment highlight-current-border border-no-top"    data-fragment-index="1">System.out.println("simonis: exiting Z::run()");</span>
    }
  }
  public static void main(String[] args) throws ... {
    <span class="fragment highlight-current-border" data-fragment-index="2">ClassLoader cl = new URLClassLoader(...);</span>
    <span class="fragment highlight-current-border" data-fragment-index="3">Class&lt;?&gt; c = cl.loadClass("simonis.Unload$Z");</span>

    <span class="fragment highlight-current-border" data-fragment-index="4">new MyThread(c).start(); // Call Z::run() reflectively</span>

    <span class="fragment highlight-current-border border-no-bottom" data-fragment-index="5">c = null; </span>
    <span class="fragment highlight-current-border border-no-top"    data-fragment-index="5">cl = null;</span>
    <span class="fragment highlight-border" data-fragment-index="6">systemGC();</span>

    <span class="fragment highlight-border" data-fragment-index="6">systemGC();</span>
              </code>
            </pre>

<div class="quiz fragment" data-fragment-index="7">
  <!-- Quiz content -->
  <div class="quiz-content">
    <div class="quiz-header">
      <h2>When will the class <code style='font-size: smaller;'>simonis.Unload.Z</code> be unloaded ?</h2>
    </div>
    <div class="quiz-body">
      <ol>
        <li>During the first System.gc()</li>
        <li>During the second System.gc()</li>
        <li>It depends on the time between the first and second System.gc()</li>
        <li>Never</li>
      </ol>
    </div>
    <div class="quiz-footer">
      &nbsp;
    </div>
  </div>
</div>
          </section>

          <section class="demo">

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
$ java -Xlog:class+load,class+unload simonis.Unload | grep simonis
<span class="fragment" data-fragment-index="1">[class,load] simonis.Unload
[class,load  ] simonis.Unload$Z
simonis: -&gt; Calling System.gc() ...
simonis: &lt;- System.gc() done
<span class="fragment" data-fragment-index="2"><span class="fragment highlight-current-border" data-fragment-index="2">&lt;RETURN&gt; // quick</span></span>
<span class="fragment" data-fragment-index="3">simonis: -&gt; Calling System.gc() ...
simonis: &lt;- System.gc() done
<span class="fragment highlight-current-border" data-fragment-index="4">simonis: exiting Z::run()</span></span></span>
              </code>
            </pre>

            <pre class="big noshadow" style="height:100%; margin: 0;" data-trim="true">
              <code class="terminal" data-trim="true" data-noescape="true" style="height:100%">
<span class="fragment" data-fragment-index="5">$ java -Xlog:class+load,class+unload simonis.Unload | grep simonis</span>
<span class="fragment" data-fragment-index="6">[class,load] simonis.Unload
[class,load  ] simonis.Unload$Z
simonis: -&gt; Calling System.gc() ...
simonis: &lt;- System.gc() done
<span class="fragment" data-fragment-index="7"><span class="fragment highlight-current-border" data-fragment-index="7">simonis: exiting Z::run()</span></span>
<span class="fragment" data-fragment-index="8"><span class="fragment highlight-current-border" data-fragment-index="8">&lt;RETURN&gt; // wait for more than 3 seconds ...</span></span>
<span class="fragment" data-fragment-index="9">simonis: -&gt; Calling System.gc() ...
[class,<span class="fragment highlight-current-border" data-fragment-index="10">unload</span>] unloading class <span class="fragment highlight-current-border" data-fragment-index="10">simonis.Unload$Z</span>
simonis: &lt;- System.gc() done</span></span>
              </code>
            </pre>
          </section>

        </section>

        <section>

          <h3 style="text-transform: none;"><a href="https://github.com/simonis/BirthLifeAndDeathOfAClass">https://github.com/simonis/BirthLifeAndDeathOfAClass</a></h3>

          <h3 style="text-transform: none;"><a href="https://simonis.github.io/BirthLifeAndDeathOfAClass">https://simonis.github.io/BirthLifeAndDeathOfAClass</a></h3>

        </section>

<!--

Note:
- not all Java compilers generate the same Java class files and Java byte code.
- e.g. String concatenation (simonis/Hello.java, JEP 280: Indify String Concatenation, OpenJDK/Eclipse compiler)
- how Java is translated into bytecode is not specified by the standard

Reference to BCL/ASM, ByteBuddy, etc.

-->


      </div>

    </div>

    <script src="reveal.js/lib/js/head.min.js"></script>
    <script src="reveal.js/js/reveal.js"></script>

    <script>

      // Full list of configuration options available at:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
        //width: 1024,
        //height: 768,
        //width: 1280,
        //height: 720,
        width: 1366,
        height: 768,
        //width: 1920,
        //height: 1080,
        margin: 0.1,
        controls: true,
        progress: true,
        history: true,
        center: true,
        slideNumber: true,

        transition: 'none', // none/fade/slide/convex/concave/zoom

        // Optional reveal.js plugins
        dependencies: [
          { src: 'reveal.js/lib/js/classList.js', condition: function() { return !document.body.classList; } },
          { src: 'reveal.js/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'reveal.js/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'reveal.js/plugin/highlight/highlight.js', async: true, condition: function() { return !!document.querySelector( 'pre code' ); }, callback: function() {

hljs.registerLanguage('terminal', function(hljs) {
  return {
    contains: [
      hljs.C_LINE_COMMENT_MODE,
      {
        className: 'title',
        lexemes: /[$()>_a-zA-Z0-9]+/,
        keywords: "$ (gdb) hsdb>",
        begin: /^\$ |\(gdb\)|hsdb> /,
        end: /[^\\]\n/,
	contains: [
          hljs.COMMENT('//', '$', { endsParent: true })
	]
      }
    ]
  }
});

hljs.initHighlightingOnLoad(); } },
          { src: 'reveal.js/plugin/zoom-js/zoom.js', async: true },
          { src: 'reveal.js/plugin/notes/notes.js', async: true }
        ]
      });

      //Reveal.configure({ slideNumber: true });



<![CDATA[

      // This function was adapted from:
      // Titus Cieslewski (https://stackoverflow.com/users/796329/titus-cieslewski) and
      // Dan Harper (https://stackoverflow.com/users/148975/danharper) from:
      // https://stackoverflow.com/questions/808826/draw-arrow-on-canvas-tag
      function canvas_arrow(context, fromx, fromy, tox, toy){
        var headlen = 10;   // length of head in pixels
        var angle = Math.atan2(toy-fromy,tox-fromx);
        context.lineCap = 'round';
        context.moveTo(fromx, fromy);
        context.lineTo(tox, toy);
        context.moveTo(tox, toy);
        context.lineTo(tox-headlen*Math.cos(angle-Math.PI/6),toy-headlen*Math.sin(angle-Math.PI/6));
        context.moveTo(tox, toy);
        context.lineTo(tox-headlen*Math.cos(angle+Math.PI/6),toy-headlen*Math.sin(angle+Math.PI/6));
      }

      function drawArrow(canvas, from, target, color) {
        var ctx = canvas.getContext("2d");
        ctx.lineWidth = 5;
        ctx.strokeStyle= color;
        var x1, y1, x2, y2;
        if ((from.offsetTop + from.offsetHeight) < (target.offsetTop)) {
          // 'from' above 'target'
          if ((from.offsetLeft + from.offsetWidth) < (target.offsetLeft)) {
            // 'from' feft of 'target'
            x1 = from.offsetLeft + from.offsetWidth;
            y1 = from.offsetTop + from.offsetHeight;
            x2 = target.offsetLeft;
            y2 = target.offsetTop;
          }
          else if ((from.offsetLeft) > (target.offsetLeft + target.offsetWidth)) {
            // 'from' right of 'target'
            x1 = from.offsetLeft;
            y1 = from.offsetTop + from.offsetHeight;
            x2 = target.offsetLeft + target.offsetWidth;
            y2 = target.offsetTop;
          }
          else {
            x1 = from.offsetLeft + (from.offsetWidth / 2);
            y1 = from.offsetTop + from.offsetHeight;
            x2 = target.offsetLeft + (target.offsetWidth / 2);
            y2 = target.offsetTop;
          }
        }
        else if ((from.offsetTop) > (target.offsetTop + target.offsetHeight)) {
          // 'from' below 'target'
          if ((from.offsetLeft + from.offsetWidth) < (target.offsetLeft)) {
            // 'from' feft of 'target'
            x1 = from.offsetLeft + from.offsetWidth;
            y1 = from.offsetTop;
            x2 = target.offsetLeft;
            y2 = target.offsetTop + target.offsetHeight;
          }
          else if ((from.offsetLeft) > (target.offsetLeft + target.offsetWidth)) {
            // 'from' right of 'target'
            x1 = from.offsetLeft;
            y1 = from.offsetTop;
            x2 = target.offsetLeft + target.offsetWidth;
            y2 = target.offsetTop + target.offsetHeight;
          }
          else {
            x1 = from.offsetLeft + (from.offsetWidth / 2);
            y1 = from.offsetTop;
            x2 = target.offsetLeft + (target.offsetWidth / 2);
            y2 = target.offsetTop + target.offsetHeight;
          }
        }
        else if ((from.offsetLeft) < (target.offsetLeft)) {
          // 'from' feft of 'target'
          x1 = from.offsetLeft + from.offsetWidth;
          y1 = from.offsetTop + (from.offsetHeight / 2);
          x2 = target.offsetLeft;
          y2 = target.offsetTop + (target.offsetHeight / 2);
        }
        else {
          // 'from' right of 'target'
          x1 = from.offsetLeft;
          y1 = from.offsetTop + (from.offsetHeight / 2);
          x2 = target.offsetLeft + target.offsetWidth;
          y2 = target.offsetTop + (target.offsetHeight / 2);
        }
        ctx.beginPath();
        ctx.moveTo(x1, y1);
        //ctx.bezierCurveTo(30,60,40,100, 50,120);
        ctx.lineTo(x2, y2);
        canvas_arrow(ctx, x1, y1, x2, y2);
        ctx.stroke();
      }

      function handleFragmentEvent(fragments, current, show) {
        var code = current.parentNode;
        var firstArrow = true;
        var fragmentShown = false;

        var canvas, canvases = code.getElementsByTagName("canvas");
        if (canvases.length != 0) {
          canvas = canvases[0];
          canvas.getContext("2d").clearRect(0, 0, canvas.width, canvas.height);
        }
        fragments.forEach(function(fragment, i) {
          if (show === false && current === fragment) fragmentShown = true;
          var cll = fragment.classList;
          if (((cll.contains("highlight-border") && !fragmentShown) ||
               (cll.contains("highlight-current-border") && cll.contains("current-fragment"))) &&
              fragment.hasAttribute("arrow-to")) {

            var target = document.getElementById(fragment.getAttribute("arrow-to"));
            if (canvases.length === 0) {
              canvas = document.createElement("canvas");
              // Place the canvas right over the parent node ..
              canvas.style.position= 'absolute';
              canvas.style.zIndex= '100';
              canvas.style.top= '0px';
              canvas.style.left= '0px';
              // .. and make it the same size.
              canvas.style.width= code.offsetWidth + 'px';
              canvas.style.height= code.offsetHeight + 'px';
              // Make the canvas bounding box (i.e. canvas' css dimensions)
              // and the canvas logical size be the same. That way we don't
              // have to convert between the two coordinate systems of the
              // elemnts on the overlaying DOM element and the canvas.
              canvas.width= code.offsetWidth;
              canvas.height= code.offsetHeight;
              code.appendChild(canvas);
            }
            drawArrow(canvas, fragment, target, "#1b91ff");
          }
          if (show === true && current === fragment) fragmentShown = true;
        });
      }

      Reveal.addEventListener('fragmenthidden', function(event) {
        handleFragmentEvent(event.allFragments, event.fragments[0], false);
      });

      Reveal.addEventListener('fragmentshown', function(event) {
        handleFragmentEvent(event.allFragments, event.fragments[event.fragments.length - 1], true);
      });


]]>
    </script>

  </body>
</html>

<!--  LocalWords:  HotSpot scrollable px pre noshadow Volker Simonis builtin VM
 -->
<!--  LocalWords:  Observability Bytecode runtime bytecodes Ljava sayHello ns
 -->
<!--  LocalWords:  JBreak JVMTI JNI fPIC JDK traceMethodAgent cpp TTS Safepoint
 -->
<!--  LocalWords:  unboxing JIT JVM safepoints Intrinsify fff POSIX
 -->
<!--  LocalWords:  NullPointers StackOverflows SEH VEH AIX NPE GC td
 -->
<!--  LocalWords:  safepoint hljs hirarchy monospace arial helvetica
 -->
<!--  LocalWords:  ffffff functionCall darkblue javaCall darkgreen cp
 -->
<!--  LocalWords:  ffa rowspan setq inputStr substring resultStr kbd
 -->
<!--  LocalWords:  concat vhs Shoi Seffano Sreedhar Midkiff movl RBP
 -->
<!--  LocalWords:  CompileCommand compileonly RDX movq klass RAX addl
 -->
<!--  LocalWords:  showversion Xbatch PrintCompilation UseTLAB imull
 -->
<!--  LocalWords:  UseCompressedOops TieredCompilation scalarReplace
 -->
<!--  LocalWords:  PrintOptoAssembly DoEscapeAnalysis arraycopy alloc
 -->
<!--  LocalWords:  PrintEscapeAnalysis PrintEliminateAllocations Bak
 -->
<!--  LocalWords:  IndexOutOfBoundsException ArrayCopy ArrayCopyNode
 -->
<!--  LocalWords:  AllocateArrayNode Disassembler Binutils Pangin
 -->
<!--  LocalWords:  RigaDevDay JPoint Beckwith Parhar Rutisson Poonam
 -->
<!--  LocalWords:  Bajaj JEEConf
 -->
